1● Seleziona tutti gli ospiti che sono stati identificati con la carta di
identità

SELECT * FROM `ospiti` 
WHERE document_type = "CI";

2● Seleziona tutti gli ospiti che sono nati dopo il 1988

SELECT * FROM `ospiti` 
WHERE YEAR(date_of_birth) > "1988";

3● Seleziona tutti gli ospiti che hanno più di 20 anni (al momento
dell’esecuzione della query)

SELECT * FROM `ospiti` 
WHERE (YEAR(CURRENT_DATE) - YEAR(date_of_birth)) > 20;

oppure per essere precisi
TIMESTAMPDIFF(YEAR, date_of_birth, CURRENT_DATE) > 20;

4● Seleziona tutti gli ospiti il cui nome inizia con la D

SELECT * FROM `ospiti`
WHERE name LIKE "D%";

5● Calcola il totale degli ordini accepted

SELECT COUNT(*) 
FROM `pagamenti` 
WHERE status = "accepted";

6● Qual è il prezzo massimo pagato?

SELECT `price` 
FROM `pagamenti` 
WHERE status = "accepted"
ORDER BY `price` DESC LIMIT 1;

7● Seleziona gli ospiti riconosciuti con patente e nati nel 1975

SELECT * FROM `ospiti` 
WHERE document_type = "Driver License" AND YEAR(date_of_birth) = "1975";

8● Quanti paganti sono anche ospiti?

SELECT COUNT(*) 
FROM `paganti` 
WHERE ospite_id IS NOT NULL;

9● Quanti posti letto ha l’hotel in totale?

SELECT SUM(beds)
FROM `stanze`;


-------------------------------- GROUP BY ----------------------------------

1.1● Conta gli ospiti raggruppandoli per anno di nascita

SELECT COUNT(id), YEAR(date_of_birth) AS anno_ricorrente
FROM `ospiti`
GROUP BY YEAR(date_of_birth)

1.2● Somma i prezzi dei pagamenti raggruppandoli per status

SELECT (status), SUM(price) AS somma_prezzi
FROM `pagamenti`
GROUP BY status

1.3● Conta quante volte è stata prenotata ogni stanza

SELECT COUNT(*) AS numero_di_prenotazioni, stanza_id
FROM `prenotazioni`
GROUP BY stanza_id

1.4● Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono
più frequenti

SELECT COUNT(id) AS tot_ricorrenze, CONCAT(HOUR(created_at), ':00' ) AS ora_ricorrente
FROM `prenotazioni`
GROUP BY CONCAT(HOUR(created_at), ':00' )
ORDER BY COUNT(id) ASC

1.5● Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?

SELECT COUNT(*) AS tot_pren_effettuate, ospite_id 
FROM `prenotazioni_has_ospiti`
GROUP BY ospite_id
ORDER BY tot_pren_effettuate DESC
#LIMIT 1


-------------------------------- JOIN ----------------------------------
1● Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

SELECT COUNT(`prenotazioni_has_ospiti`.`ospite_id`) AS `tot_prenotazioni`, `prenotazioni_has_ospiti`.`ospite_id`, `ospiti`.`name`, `ospiti`.`lastname`
FROM `prenotazioni_has_ospiti`
JOIN `ospiti`
ON `prenotazioni_has_ospiti`.`ospite_id` = `ospiti`.`id`
GROUP BY `prenotazioni_has_ospiti`.`ospite_id`
HAVING COUNT(`ospite_id`) > 2;


2● Stampare tutti gli ospiti per ogni prenotazione

SELECT `prenotazioni_has_ospiti`.`id`, `prenotazioni_has_ospiti`.`prenotazione_id`, `prenotazioni_has_ospiti`.`ospite_id`, `ospiti`.`name`, `ospiti`.`lastname` 
FROM `prenotazioni_has_ospiti`
JOIN `ospiti`
ON `prenotazioni_has_ospiti`.`ospite_id` = `ospiti`.`id`


3● Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

SELECT `pagamenti`.`id`,`paganti`.`name`, `paganti`.`lastname`, `pagamenti`.`price`, `paganti`.`id` AS `pagante`, `pagamenti`.`created_at` AS `data_prenotazione` 
FROM `pagamenti`
JOIN `paganti`
ON `pagamenti`.`pagante_id` = `paganti`.`id`
HAVING `pagamenti`.`created_at` BETWEEN "2018-05-01" AND "2018-05-31"


4● Fai la somma di tutti i prezzi delle prenotazioni per le stanze del
primo piano

SELECT SUM(`pagamenti`.`price`) AS "somma_prezzi",`stanze`.`floor`
FROM `prenotazioni`
JOIN `stanze`
ON `stanze`.`id` = `prenotazioni`.`stanza_id` AND  `stanze`.`floor` = 1
#relaziono la terza tabella per paragonare gli id
JOIN `pagamenti`
ON `pagamenti`.`prenotazione_id` = `prenotazioni`.`id`


5● Prendi i dati di fatturazione per la prenotazione con id=7

#tab da relazionare prenotazioni - stanze - pagamenti - paganti
SELECT prenotazioni.id, prenotazioni.created_at AS "data_prenotazione", stanze.room_number, stanze.beds, pagamenti.price, paganti.name, paganti.lastname, paganti.address
FROM prenotazioni
JOIN stanze
ON prenotazioni.stanza_id = stanze.id
JOIN pagamenti
ON prenotazioni.id = pagamenti.prenotazione_id
JOIN paganti
ON pagamenti.pagante_id = paganti.id
HAVING prenotazioni.id = 7


6● Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate)

# da utilizzare LEFT JOIN per confrontare i record delle due tabelle,il risultato è NULL dala tab prenotazioni, se non c'è corrispondenza.  
SELECT stanze.id, stanze.room_number, stanze.floor, stanze.beds
FROM `stanze`
LEFT JOIN `prenotazioni`
ON `stanza_id` = `stanze`.`id`  
WHERE `prenotazioni`.`id` IS NULL




